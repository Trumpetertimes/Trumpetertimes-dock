package org.shixun.demo;
import java.util.*;
import java.io.*;
public class helloworld {
	public static void main(String arg[])
	{
		System.out.println("###################");
	    System.out.println("欢迎进入学生管理系统！");
	    File file=new File("D:\\student.txt");
	    if(!file.exists())
	    {
	    	try 
	    	{
	    	file.createNewFile();
	    	}
	    	catch(Exception e)
	    	{
	    		e.printStackTrace();
	    	}
	    }
	    List<Student> list=new ArrayList<Student>();
	    StudentFunction studentfunction=new StudentFunction();
	    FileFunction filefunction=new FileFunction();
	    Scanner s=new Scanner(System.in);
	    String juge=" ";
	    System.out.println("--------------------");
	    try 
	    {
	    	if(filefunction.FileRead(file).isEmpty()==true)
	    	{
	    		System.out.println("学生信息为空!");
	    		list=studentfunction.StudentAdd(list);
	    	}
	    	else
	    	{
	    		list=filefunction.FileRead(file);
	    	}
	    }
	    catch(IOException e)
	    {
	    	e.printStackTrace();
	    }
	    System.out.println("功能可输入：\n添加学生信息\n"+"按学号查询学生信息\n"+"显示当前所有学生信息\n"+"删除所有学生信息\n通过学号删除此学生信息\n通过学生名删除此学生信息\n退出系统");
	    while(true)
	    {
	    	juge=s.nextLine();
	    	if(juge.equals("添加学生信息"))
	    	{
	    	try 
	    	{
	    	    list=studentfunction.StudentAdd(list);	
	    	}
	    	catch(Exception e)
	    	{
	    		e.printStackTrace();
	      	}
	    	}
	    	if(juge.equals("显示当前所有学生信息"))
	    	{
	    		try 
	    		{	
	    		    for(int i=0;i<list.size();i++)
	    		    {
	    		    	System.out.print(list.get(i).id+"   ");
	    		    	System.out.print(list.get(i).name+"   ");
	    		    	System.out.print(list.get(i).Class+"   ");
	    		    	System.out.print(list.get(i).homeadd+"   ");
	    		    	System.out.print(list.get(i).home+"   ");
	    		    	System.out.print(list.get(i).grade+"   ");
	    		    	System.out.print(list.get(i).major+"\n");
	    		    }
	    		}
	    		catch(Exception e)
	    		{
	    			e.printStackTrace();
	    		}
	    	}
	    	
	    	if(juge.equals("删除所有学生信息"))
	    	{
	    		list=studentfunction.DeletAll(list);
	    		file.delete();
	    		System.out.println("所有学生信息已删除！");
	    	}
	    	
	    	if(juge.equals("通过学号删除此学生信息"))
	    	{
	    		list=studentfunction.DeletById(list);
	    		System.out.println("操作成功！");
	    	}
	    	
	    	if(juge.equals("按学号查询学生信息"))
	    	{
	    		Student a=new Student();
	    		System.out.println("输入要查询学生的学号");
	    		a=studentfunction.IdGetStudentInfo(list);
	    		if(a.Class.equals("0")==true)
	    		{
	    			System.out.println("系统中没有此学生信息！");
	    		}
	    	}
	    	if(juge.equals("退出系统"))
	    	{
	    		s.close();
	    		try {
	    		filefunction.FileWrite(file, list);
	    		}
	    		catch(IOException e)
	    		{
	    			e.printStackTrace();
	    		}
	    		break;
	    	}
	    	System.out.println("--------------------");
		    System.out.println("##功能：\n#添加学生信息\n"+"按学号查询学生信息\n"+"#显示当前所有学生信息\n"+"#删除所有学生信息\n#通过学号删除此学生信息\n#通过学生名删除此学生信息\n");
	    }
	}
}

class Student
{
    String name;
    String id;
    String major;
    String Class;
    String homeadd;
    String home;
    String grade;
    Student()
    {
    	
    }
    Student(String name,String id,String major,String Class,String homeadd,String home,String grade)
    {
    	this.name=name;this.id=id;this.major=major;this.Class=Class;this.homeadd=homeadd;this.home=home;this.grade=grade;
    }
    public String GetGrade()
    {
    	return grade;
    }
    public String Getid()
    {
    	return id;
    }
    public String GetName()
    {
    	return name;
    }
    public void ChangeId(String id)
    {
    	this.id=id;
    }
    public void ChangeGrade(String grade)
    {
    	this.grade=grade;
    }
}

class StudentFunction
{
	
	StudentFunction()
	{
		
	}
	StudentFunction(List<Student> student)
	{
		
	}
	public void ShowGradeRank()
	{
		
	}
	public void ShowGradeLayout()
	{
		
	}
	public List<Student> DeletAll(List<Student> list)
	{
		list.clear();
		return list;
	}
	public List<Student> DeletById(List <Student> student)
	{
		String id2="";
		Scanner s=new Scanner(System.in);
		System.out.println("输入要删除学生的学号");
		id2=s.nextLine();
		int flag=0;
		for(int i=0;i<student.size();i++)
		{
			if(student.get(i).id.equals(id2))
			{
				student.remove(i);
				i--;
				flag++;
			}
		}
		if(flag==0)
		{
			try 
			{
			throw new IdNotFoundException();
			}
			catch(IdNotFoundException e)
			{
				e.PrintInfo();
				StudentFunction studentfunction=new StudentFunction();
				student=studentfunction.DeletById(student);
			}
		}
		return student;
	}
	public void DeletByName(String name,List <Student> student)
	{
		for(int i=0;i<student.size();i++)
		{
			if(student.get(i).name==name)
			{
				student.remove(i);
				i--;
			}
		}
	}
	public Student IdGetStudentInfo(List <Student> student)
	{
		Scanner s=new Scanner(System.in);
		String id="";
		id=s.nextLine();
		Student a=new Student();
		a.Class="0";
		int flag=0;
		for(int i=0;i<student.size();i++)
		{
			if(student.get(i).id.equals(id)) 
			{
				a=student.get(i);
				System.out.println(a.id+"   "+a.name+"   "+a.Class+"   "+a.homeadd+"   "+a.home+"   "+a.grade+"   "+a.major);
				flag++;
			}
		}
		if(flag==0)
		{
			try 
			{
				throw new IdNotFoundException();
			}
			catch(IdNotFoundException e)
			{
				e.PrintInfo();
			}
		}
		return a;
	}
	public void StudentNameChange(String name,String newname,List<Student> student)
	{
		for(int i=0;i<student.size();i++)
		{
			if(student.get(i).name==name)
			{
				student.get(i).name=newname;
			}
		}
		
	}
	public void StudentIdChange(String id,String newid,List<Student> student)
	{
		for(int i=0;i<student.size();i++)
		{
			if(student.get(i).id.equals(id))
			{
			     student.get(i).id=newid;
			}
		}
	}
	public void StudentGradeChange(String grade,String newgrade,List<Student> student)
	{
		for(int i=0;i<student.size();i++)
		{
			if(student.get(i).grade.equals(grade))
			{
				student.get(i).grade=newgrade;
			}
		}
		
	}
	public List<Student> StudentAdd(List <Student> list)
	{
		System.out.println("请输入学生信息");
		Scanner s=new Scanner(System.in);
		Student a=new Student();
		System.out.println("学号");
		a.id=s.nextLine();
		System.out.println("姓名");
		a.name=s.nextLine();
		System.out.println("班  级");
		a.Class=s.nextLine();
		System.out.println("住址");
		a.homeadd=s.nextLine();
		System.out.println("籍贯");
		a.home=s.nextLine();
		System.out.println("成绩");
		a.grade=s.nextLine();
		System.out.println("专业");
		a.major=s.nextLine();
		list.add(a);
		return list;
	}
	
}

class FileFunction
{
	public void FileWrite(File file,List <Student> student) throws IOException
	{
	    FileWriter fw=new FileWriter(file);
	    BufferedWriter bw=new BufferedWriter(fw);
	    for(int i=0;i<student.size();i++)
	    {
	    		bw.write(student.get(i).id+",");
	    		bw.write(student.get(i).name+",");
	    		bw.write(student.get(i).Class+",");
	    		bw.write(student.get(i).homeadd+",");
	    		bw.write(student.get(i).home+",");
	    		bw.write(student.get(i).grade+",");
	    		bw.write(student.get(i).major);
	    		bw.write("\n");
	    }
	    bw.close();
	    fw.close();
	}
	public List<Student> FileRead(File file) throws IOException
	{
		List<Student> list=new ArrayList<Student>();
		FileInputStream fips=new FileInputStream(file);
		InputStreamReader ipsr=new InputStreamReader(fips);
		BufferedReader br=new BufferedReader(ipsr);
		String tempall;
		String temp[];
		int i=0;
		while((tempall=br.readLine())!=null)
		{
			Student student=new Student();
			temp=tempall.split(",");
			student.id=temp[0];
			student.name=temp[1];
			student.Class=temp[2];
			student.homeadd=temp[3];
			student.home=temp[4];
			student.grade=temp[5];
			student.major=temp[6];
			list.add(i,student);
			i++;
		}
		br.close();
		ipsr.close();
		return list;
	}
}

class IdNotFoundException extends Exception
{
	private static final long serialVersionUID = 1L;
	IdNotFoundException()
	{
		super("未找到此学号的学生");
	}
	public void PrintInfo()
	{
		System.out.println("未找到此学号的学生");
	}
}
